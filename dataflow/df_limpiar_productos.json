{
	"name": "df_limpiar_productos",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_productos",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_productos",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          prd_id as string,",
				"          prd_key as string,",
				"          prd_nm as string,",
				"          prd_cost as string,",
				"          prd_line as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(prd_id = trim(iifNull(prd_id, '-1')),",
				"          prd_key = trim(iifNull(prd_key, 'N/A')),",
				"          prd_nm = trim(iifNull(prd_nm, 'N/A')),",
				"          prd_cost = iifNull(trim(prd_cost), '0'),",
				"          prd_line = trim(iifNull(prd_line, 'U'))) ~> derivedColumn1",
				"derivedColumn1 cast(output(",
				"          prd_id as integer,",
				"          prd_cost as decimal(10,2) '000,000,000.000'",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          prd_id as integer,",
				"          prd_key as string,",
				"          prd_nm as string,",
				"          prd_cost as decimal(10,2),",
				"          prd_line as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          prd_id,",
				"          prd_key,",
				"          prd_nm,",
				"          prd_cost,",
				"          prd_line",
				"     )) ~> sink1"
			]
		}
	}
}