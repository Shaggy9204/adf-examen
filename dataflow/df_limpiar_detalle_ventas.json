{
	"name": "df_limpiar_detalle_ventas",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_detalle_ventas",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_detalle_ventas",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          sls_ord_num as string,",
				"          sls_prd_key as string,",
				"          sls_cust_id as string,",
				"          sls_order_dt as string,",
				"          sls_ship_dt as string,",
				"          sls_sales as string,",
				"          sls_quantity as string,",
				"          sls_price as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"filter1 derive(sls_ord_num = trim(sls_ord_num),",
				"          sls_prd_key = trim(sls_prd_key),",
				"          sls_cust_id = trim(iifNull(sls_cust_id, '-1')),",
				"          sls_order_dt = trim(sls_order_dt),",
				"          sls_ship_dt = trim(sls_ship_dt),",
				"          sls_sales = trim(sls_sales),",
				"          sls_quantity = iifNull(trim(sls_quantity), '0'),",
				"          sls_price = iifNull(trim(sls_price), '0')) ~> derivedColumn1",
				"aggregate1 cast(output(",
				"          sls_cust_id as integer,",
				"          sls_order_dt as date 'yyyyMMdd',",
				"          sls_ship_dt as date 'yyyyMMdd',",
				"          sls_sales as decimal(19,4) '000,000,000.000',",
				"          sls_quantity as integer,",
				"          sls_price as decimal(19,4) '000,000,000.000'",
				"     ),",
				"     errors: true) ~> cast1",
				"source1 filter(!isNull(sls_ord_num) && !isNull(sls_prd_key) && !isNull(sls_cust_id)) ~> filter1",
				"derivedColumn1 aggregate(groupBy(sls_ord_num,",
				"          sls_prd_key),",
				"     sls_cust_id = first(sls_cust_id),",
				"          sls_order_dt = first(sls_order_dt),",
				"          sls_ship_dt = first(sls_ship_dt),",
				"          sls_sales = first(sls_sales),",
				"          sls_quantity = first(sls_quantity),",
				"          sls_price = first(sls_price)) ~> aggregate1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sls_ord_num as string,",
				"          sls_prd_key as string,",
				"          sls_cust_id as integer,",
				"          sls_order_dt as date,",
				"          sls_ship_dt as date,",
				"          sls_sales as decimal(19,4),",
				"          sls_quantity as integer,",
				"          sls_price as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          sls_ord_num,",
				"          sls_prd_key,",
				"          sls_cust_id,",
				"          sls_order_dt,",
				"          sls_ship_dt,",
				"          sls_sales,",
				"          sls_quantity,",
				"          sls_price",
				"     )) ~> sink1"
			]
		}
	}
}